{
  "name": "Exemplo de Payload",
  "description": "Configuração para mapear raios gama e radiofrequência em um objeto na galáxia de Andrômeda.",
  "tasks": [
    {
      "type": "observation",
      "name": "Observação de raios gama",
      "instrument": "Telescópio de raios gama",
      "target": "Objeto de Andrômeda",
      "parameters": {
        "energia": "100 keV - 10 MeV",
        "resolução temporal": "1 ms",
        "resolução espacial": "1 arcmin"
      }
    },
    {
      "type": "observation",
      "name": "Observação de radiofrequência",
      "instrument": "Radiotelescópio",
      "target": "Objeto de Andrômeda",
      "parameters": {
        "frequência": "1 GHz - 10 GHz",
        "resolução temporal": "1 s",
        "resolução espacial": "1 arcsec"
      }
    },
    {
      "type": "processing",
      "name": "Mapeamento de raios gama",
      "input": "Observação de raios gama",
      "output": "Mapa de raios gama",
      "language": "Ruby",
      "code": "class GammaRayMapping\n  def initialize(input)\n    @input = input\n  end\n\n  def map\n    # Adicione aqui a lógica para mapeamento de raios gama\n    puts 'Mapeamento de raios gama realizado com sucesso!'\n  end\nend\n\ninput = 'Observação de raios gama'\ngamma_mapping = GammaRayMapping.new(input)\ngamma_mapping.map\n"
    },
    {
      "type": "processing",
      "name": "Mapeamento de radiofrequência",
      "input": "Observação de radiofrequência",
      "output": "Mapa de radiofrequência",
      "language": "Ruby",
      "code": "class RadioFrequencyMapping\n  def initialize(input)\n    @input = input\n  end\n\n  def map\n    # Adicione aqui a lógica para mapeamento de radiofrequência\n    puts 'Mapeamento de radiofrequência realizado com sucesso!'\n  end\nend\n\ninput = 'Observação de radiofrequência'\nradio_mapping = RadioFrequencyMapping.new(input)\nradio_mapping.map\n"
    }
  ]
}
